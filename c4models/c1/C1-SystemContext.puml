@startuml
!include <C4/C4_Context>

TITLE RecruitX Next – C1 System Context Diagram

' People
Person(recruiter, "Recruiter", "Manages candidate interviews and scheduling")
Person(candidate, "Candidate", "Applies for positions and selects interview slots")
Person(interviewer, "Interviewer", "Conducts interviews with candidates")

' System
System(recruitXSystem, "RecruitX Next", "Interview scheduling platform that manages end-to-end workflows")

' External Systems
System_Ext(interviewLogger, "InterviewLogger", "Applicant Tracking System")
System_Ext(myMindComputeProfile, "MyMindComputeProfile", "Employee skills and technical assessment")
System_Ext(leavePlanner, "LeavePlanner", "Employee leave management")
System_Ext(calendar, "Calendar", "Primary calendar platform for interviewers")
System_Ext(mindComputeScheduler, "MindComputeScheduler", "Candidate-facing interview coordination platform")
System_Ext(Messenger, "Messenger", "Communication platform")

' Human → System
Rel(recruiter, recruitXSystem, "Uses chatbot or dashboard to schedule, reschedule, view interviews")
Rel(candidate, recruitXSystem, "Selects interview slots via MindComputeScheduler-generated link")
Rel(interviewer, recruitXSystem, "Receives interview notifications, provides availability")

' RecruitX → External Systems
Rel(recruitXSystem, interviewLogger, "Pulls candidate data, receives webhook triggers")
Rel(interviewLogger, recruitXSystem, "Sends webhooks for scheduling triggers")

Rel(recruitXSystem, myMindComputeProfile, "Fetches skill data for interviewer matching")
Rel(recruitXSystem, leavePlanner, "Checks interviewer availability")
Rel(recruitXSystem, calendar, "Schedules interviews and checks availability")

Rel(recruitXSystem, mindComputeScheduler, "Sends available slots to candidates")
Rel(mindComputeScheduler, recruitXSystem, "Pushes selected slot via webhook")

Rel(Messenger, recruitXSystem, "Triggers scheduling flows via chatbot")
Rel(recruitXSystem, Messenger, "Sends notifications, fallback alerts, insights")

@enduml
